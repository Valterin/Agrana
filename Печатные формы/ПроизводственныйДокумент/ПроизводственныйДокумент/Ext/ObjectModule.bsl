Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ЭтапПроизводства2_2"); //Указываем документ к которому делаем внешнюю печ. форму
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); 	
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "ПроизводственныйДокумент"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия", "1.0");       
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "Производственный Документ", "ПроизводственныйДокумент", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;  
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПроизводственныйДокумент", "Производственный Документ", СформироватьПечатнуюФорму(МассивОбъектов[0], ОбъектыПечати));
	
КонецПроцедуры // Печать()

Функция СформироватьПечатнуюФорму(СсылкаНаДокумент, ОбъектыПечати)Экспорт
	//КарпенкоНН,15.03.2024  ПР1-22-001 Печатная форма “Производственный Документ”
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПроизводственныйДокумент";
	МакетОбработки = ПолучитьМакет("ПроизводственныйДокумент");	
	
	
	////Заголовок
	
	//Номенклатура = СсылкаНаДокумент.Спецификация.ОсновноеИзделиеНоменклатура;
	Аллергены    = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту(
	"Имя",
	"аллергены"
	);  
	ТемператураРасфасовки  = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту(
	"Имя",
	"Z_ABFTE"
	);
	ТемператураВыдержки = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту(
	"Имя",
	"Z_HEISTE"
	); 
	СтатусОграниченияИспользования = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту(
	"Имя",
	"Z_MMSTA"
	);
	ВодаДляПоиска  =  НайтиВоду();
	
	
	////Шапка
	ОбластьШапка = МакетОбработки.ПолучитьОбласть("Шапка");
	Если ТипЗнч(СсылкаНаДокумент.Распоряжение) = Тип("ДокументСсылка.ЗаказНаПроизводство2_2") Тогда  
		Если СсылкаНаДокумент.Распоряжение.Продукция.Количество() > 0  Тогда
			Номенклатура = СсылкаНаДокумент.Распоряжение.Продукция[0].Номенклатура;
			ОбластьШапка.Параметры.АртикулНоменклатуры = Номенклатура.Артикул;
			ОбластьШапка.Параметры.НаименованиеНоменклатуры = Номенклатура;
		КонецЕсли;	
		ОбластьШапка.Параметры.Партия = СсылкаНаДокумент.Распоряжение.агрПартияНоменклатуры;
		ОбластьШапка.Параметры.НомерПроизв = СсылкаНаДокумент.Распоряжение.Номер; 
		ОбластьШапка.Параметры.ВидРабочегоЦентра  =  СсылкаНаДокумент.Распоряжение.агрВРЦИзПланировщика;
		
		//ШТРИХКОД		
		
		ВходныеДанные = ПолучитьНомерДляШтрихКода(СсылкаНаДокумент.Распоряжение);
		
		Если НЕ ВходныеДанные = Неопределено Тогда
			Рисунок = ОбластьШапка.Рисунки.D1;
			
			КоличествоМиллиметровВПикселеВысота = Рисунок.Высота / 100;
			КоличествоМиллиметровВПикселеШирина = Рисунок.Ширина / 100;
			ШиринаШтрихкода = Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселеШирина);
			ВысотаШтрихкода = Окр(Рисунок.Высота / КоличествоМиллиметровВПикселеВысота);
			
			
			
			Картинка = ПолучитьШтрихкод(ШиринаШтрихкода, ВысотаШтрихкода, ВходныеДанные.Номер, 2);  // 24 - Datamatrix GS1ASCII
			
			Рисунок.Картинка = Картинка;
		КонецЕсли;
	КонецЕсли;  
	/////////////////////////////////
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область("Шапка");
	
	////Тело
	ОбластьТело = МакетОбработки.ПолучитьОбласть("Тело");
	Если СсылкаНаДокумент.Распоряжение.Продукция.Количество() > 0  Тогда
		Если ЗначениеЗаполнено(СсылкаНаДокумент.Распоряжение.Продукция[0].Назначение) Тогда
			ОбластьТело.Параметры.Клиент =СсылкаНаДокумент.Распоряжение.Продукция[0].Назначение.Заказ.Партнер;
		КонецЕсли;
		КоличествоМатериала  =   СсылкаНаДокумент.Распоряжение.Продукция.Выгрузить(,"Количество");
		КоличествоМатериала.Свернуть(,"Количество");
		ОбластьТело.Параметры.КолвоВЗаказе = КоличествоМатериала[0].Количество; 
	КонецЕсли;
	Если ТипЗнч(СсылкаНаДокумент.Спецификация) = Тип("СправочникСсылка.РесурсныеСпецификации") Тогда
		ОтборВода = Новый Структура("Номенклатура" , ВодаДляПоиска);
		ТЗМатериалы =  СсылкаНаДокумент.Спецификация.МатериалыИУслуги.Выгрузить(ОтборВода,"КоличествоУпаковок");
		ТЗМатериалы.Свернуть(,"КоличествоУпаковок");  
		Если ТЗМатериалы.Количество() > 0 Тогда
			ОбластьТело.Параметры.Вода = ТЗМатериалы[0].КоличествоУпаковок; 	
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Номенклатура  = Неопределено Тогда
		ОбластьТело.Параметры.Аллергены = Номенклатура.асап_пр_Аллерген; 
		ОбластьТело.Параметры.ТемператураРасфасовки = УправлениеСвойствами.ЗначениеСвойства(Номенклатура, ТемператураРасфасовки);;
		ОбластьТело.Параметры.ТемператураПастеризации = УправлениеСвойствами.ЗначениеСвойства(Номенклатура, ТемператураВыдержки);;;
		ОбластьТело.Параметры.Статус = УправлениеСвойствами.ЗначениеСвойства(Номенклатура, СтатусОграниченияИспользования);;;
		Если Номенклатура.асап_пр_Аллерген  = "Да" ИЛИ Номенклатура.асап_пр_Аллерген = "ДА"   ИЛИ Номенклатура.асап_пр_Аллерген = "да" Тогда 
			ОбластьТело.Область("R3C9").ЦветТекста= WebЦвета.Красный
		КонецЕсли;
	КонецЕсли;  
	
	
	ЗапросКон= новый Запрос;
	ЗапросКон.Текст = "ВЫБРАТЬ                                   
	|	СерииНоменклатурыДополнительныеРеквизиты.Ссылка КАК Ссылка,
	|	СерииНоменклатурыДополнительныеРеквизиты.Свойство КАК Свойство,
	|	СерииНоменклатурыДополнительныеРеквизиты.Значение КАК Значение
	|ПОМЕСТИТЬ Сер
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделияСерии КАК ЭтапПроизводства2_2ВыходныеИзделияСерии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры.ДополнительныеРеквизиты КАК СерииНоменклатурыДополнительныеРеквизиты
	|		ПО (ЭтапПроизводства2_2ВыходныеИзделияСерии.Серия = СерииНоменклатурыДополнительныеРеквизиты.Ссылка)
	|ГДЕ
	|	ЭтапПроизводства2_2ВыходныеИзделияСерии.Ссылка = &Ссылка
	|	И СерииНоменклатурыДополнительныеРеквизиты.Свойство.Наименование ПОДОБНО ""%Серийный номер контейнера%""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияСерийТоваров.Серия.Наименование КАК СерияНаименование,
	|	ДвиженияСерийТоваров.Номенклатура КАК Номенклатура
	|ИЗ
	|	Сер КАК Сер
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ПО (Сер.Значение = ДвиженияСерийТоваров.Серия.Наименование)"; 
	ЗапросКон.УстановитьПараметр("Ссылка", СсылкаНаДокумент.Ссылка);		  
	РезультатЗапросаКон = ЗапросКон.Выполнить();
	ВыборкаКон = РезультатЗапросаКон.Выбрать();
	Пока ВыборкаКон.Следующий() Цикл
	КонецЦикла; 
	ОбластьТело.Параметры.Контейнер =ВыборкаКон.Номенклатура;
	
	
	
	ТабличныйДокумент.Вывести(ОбластьТело);
	Область1= МакетОбработки.ПолучитьОбласть("Область1");
	ТабличныйДокумент.Вывести(Область1);
	
	
	///ВыходныеИзделияШапка
	ВыходныеИзделияШапка = МакетОбработки.ПолучитьОбласть("ВыходныеИзделияШапка");
	ТабличныйДокумент.Вывести(ВыходныеИзделияШапка); 
	
	///ВыходныеИзделия  
	ВыходныеИзделия = МакетОбработки.ПолучитьОбласть("ВыходныеИзделия");
	Если  НЕ ВходныеДанные = Неопределено Тогда
		Для Каждого Строка  Из ВходныеДанные.ВыходныеИзделия Цикл  
			ВыходныеИзделия.Параметры.Артикул = Строка.Номенклатура.Артикул;
			ВыходныеИзделия.Параметры.Номенклатура = Строка.Номенклатура ;
			ВыходныеИзделия.Параметры.Характеристика =  Строка.Характеристика;
			ТабличныйДокумент.Вывести(ВыходныеИзделия);
		КонецЦикла;
	КонецЕсли;
	
	Область5= МакетОбработки.ПолучитьОбласть("Область5");
	ТабличныйДокумент.Вывести(Область5);

	
	////ШапкаТаб
	ОбластьШапкаТаб = МакетОбработки.ПолучитьОбласть("ШапкаТаб");
	ТабличныйДокумент.Вывести(ОбластьШапкаТаб);
	
	////Таблица
	ОбластьТаблица = МакетОбработки.ПолучитьОбласть("Таблица");
	
	ЗапросТаб= новый Запрос;
	ЗапросТаб.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	лимсИсторияПримененияНормативов.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВтТаблица1
	|ИЗ
	|	РегистрСведений.лимсИсторияПримененияНормативов КАК лимсИсторияПримененияНормативов
	|ГДЕ
	|	лимсИсторияПримененияНормативов.Номенклатура = &Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	лимсНормативноТехническаяДокументацияНормативы.Показатель КАК Показатель,
	|	лимсНормативноТехническаяДокументацияНормативы.ЗаданноеЗначение КАК ЗаданноеЗначение,
	|	лимсНормативноТехническаяДокументацияНормативы.ЗначениеНорма КАК ЗначениеНорма,
	|	лимсНормативноТехническаяДокументацияНормативы.ЗначениеМин КАК ЗначениеМин,
	|	лимсНормативноТехническаяДокументацияНормативы.ЗначениеМакс КАК ЗначениеМакс,
	|	лимсНормативноТехническаяДокументацияНормативы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Таблица2
	|ИЗ
	|	Документ.лимсНормативноТехническаяДокументация.Нормативы КАК лимсНормативноТехническаяДокументацияНормативы
	|ГДЕ
	|	лимсНормативноТехническаяДокументацияНормативы.Показатель.ТипИзмеряемыхСвойств.Наименование = ""01 Физический контроль качества""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Таблица2.Показатель КАК Показатель,
	|	ВТ_Таблица2.ЗаданноеЗначение КАК ЗаданноеЗначение,
	|	ВТ_Таблица2.ЗначениеНорма КАК ЗначениеНорма,
	|	ВТ_Таблица2.ЗначениеМин КАК ЗначениеМин,
	|	ВТ_Таблица2.ЗначениеМакс КАК ЗначениеМакс
	|ИЗ
	|	ВтТаблица1 КАК ВтТаблица1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Таблица2 КАК ВТ_Таблица2
	|		ПО ВтТаблица1.Регистратор.Ссылка = ВТ_Таблица2.Ссылка";
	ЗапросТаб.УстановитьПараметр("Номенклатура", Номенклатура);
	РезультатЗапросаТаб = ЗапросТаб.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапросаТаб.Выбрать();
	
	Если НЕ ВыборкаДетальныеЗаписи.Количество() = 0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбластьТаблица.Параметры.Признак=ВыборкаДетальныеЗаписи.Показатель;
			ОбластьТаблица.Параметры.ЗаданноеЗначение=ВыборкаДетальныеЗаписи.ЗаданноеЗначение;
			ОбластьТаблица.Параметры.НижнийПредел=ВыборкаДетальныеЗаписи.ЗначениеМин;
			ОбластьТаблица.Параметры.ВерхнийПредел=ВыборкаДетальныеЗаписи.ЗначениеМакс;
			ОбластьТаблица.Параметры.ФактическоеЗначение="_____________________";
			ТабличныйДокумент.Вывести(ОбластьТаблица);
		КонецЦикла;
	Иначе
		ОбластьТаблица.Параметры.Признак="";
		ОбластьТаблица.Параметры.ЗаданноеЗначение="";
		ОбластьТаблица.Параметры.НижнийПредел="";
		ОбластьТаблица.Параметры.ВерхнийПредел="";
		ТабличныйДокумент.Вывести(ОбластьТаблица);
	КонецЕсли;
	
	////Примечание
	ОбластьПримечание = МакетОбработки.ПолучитьОбласть("Примечание");
	
	
	ТабличныйДокумент.Вывести(ОбластьПримечание);
	////пр
	Область3 = МакетОбработки.ПолучитьОбласть("Область3");
	
	
	ТабличныйДокумент.Вывести(Область3);
	
	////ШапкаРецеп
	ОбластьШапкаРецеп = МакетОбработки.ПолучитьОбласть("ШапкаРецеп");
	ЗапросШР= новый Запрос;
	ЗапросШР.Текст="ВЫБРАТЬ
	|РесурсныеСпецификации.Наименование КАК Наименование,
	|РесурсныеСпецификации.Описание КАК Описание
	|ИЗ
	|	Справочник.РесурсныеСпецификации КАК РесурсныеСпецификации
	|ГДЕ
	|РесурсныеСпецификации.Наименование = &Наименование";
	ЗапросШР.УстановитьПараметр("Наименование", СсылкаНаДокумент.Спецификация.Наименование);
	РезультатЗапросаШР = ЗапросШР.Выполнить();
	ВыборкаШР= РезультатЗапросаШР.Выбрать();
	Пока ВыборкаШР.Следующий() Цикл	
		ОбластьШапкаРецеп.Параметры.ШапкаРецептуры =ВыборкаШР.Описание;
	КонецЦикла;
	
	ЗапросРЦ3= новый Запрос;
	ЗапросРЦ3.Текст = "ВЫБРАТЬ
	|	ЭтапПроизводства2_2ВидыРабочихЦентров.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
	|	ЭтапПроизводства2_2ВидыРабочихЦентров.Использовать КАК Использовать,
	|	ЭтапПроизводства2_2ВидыРабочихЦентров.ВремяРаботы КАК ВремяРаботы,
	|	ЭтапПроизводства2_2ВидыРабочихЦентров.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВидыРабочихЦентров КАК ЭтапПроизводства2_2ВидыРабочихЦентров
	|ГДЕ
	|	ЭтапПроизводства2_2ВидыРабочихЦентров.Ссылка = &Ссылка";
	ЗапросРЦ3.УстановитьПараметр("Ссылка", СсылкаНаДокумент.Ссылка);
	РезультатЗапросаРЦ3 = ЗапросРЦ3.Выполнить();
	ВыборкаРЦ3 = РезультатЗапросаРЦ3.Выбрать();
	Пока ВыборкаРЦ3.Следующий() Цикл
		Если  ВыборкаРЦ3.Использовать = Истина тогда
			ОбластьШапкаРецеп.Параметры.Время =ВыборкаРЦ3.ВремяРаботы;  
			ОбластьШапкаРецеп.Параметры.ЕдИз =ВыборкаРЦ3.ЕдиницаИзмерения;
		Иначе
			ОбластьШапкаРецеп.Параметры.Время =" ";  
			ОбластьШапкаРецеп.Параметры.ЕдИз =" ";
		КонецЕсли;	
	КонецЦикла;
	ЗапросРЦ4= новый Запрос;
	ЗапросРЦ4.Текст = "ВЫБРАТЬ
	|	ЭтапПроизводства2_2АльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
	|	ЭтапПроизводства2_2АльтернативныеВидыРабочихЦентров.Использовать КАК Использовать,
	|	ЭтапПроизводства2_2АльтернативныеВидыРабочихЦентров.ВремяРаботы КАК ВремяРаботы,
	|	ЭтапПроизводства2_2АльтернативныеВидыРабочихЦентров.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.АльтернативныеВидыРабочихЦентров КАК ЭтапПроизводства2_2АльтернативныеВидыРабочихЦентров
	|ГДЕ
	|	ЭтапПроизводства2_2АльтернативныеВидыРабочихЦентров.Ссылка = &Ссылка";
	ЗапросРЦ4.УстановитьПараметр("Ссылка", СсылкаНаДокумент.Ссылка);
	РезультатЗапросаРЦ4 = ЗапросРЦ4.Выполнить();
	ВыборкаРЦ4 = РезультатЗапросаРЦ4.Выбрать();
	Пока ВыборкаРЦ4.Следующий() Цикл
		Если  ВыборкаРЦ4.Использовать = Истина тогда
			ОбластьШапкаРецеп.Параметры.Время =ВыборкаРЦ4.ВремяРаботы;  
			ОбластьШапкаРецеп.Параметры.ЕдИз =ВыборкаРЦ4.ЕдиницаИзмерения;
		КонецЕсли; 	
	КонецЦикла;
	
	
	
	
	ТабличныйДокумент.Вывести(ОбластьШапкаРецеп); 
	////
	Область4 = МакетОбработки.ПолучитьОбласть("Область4");
	ТабличныйДокумент.Вывести(Область4);
	
	////ВР
	ОбластьВР = МакетОбработки.ПолучитьОбласть("ВР");
	ТабличныйДокумент.Вывести(ОбластьВР);
	
	////
	Область2 = МакетОбработки.ПолучитьОбласть("Область2");
	ТабличныйДокумент.Вывести(Область2);
	
	////Рецептура
	ОбластьРецептура = МакетОбработки.ПолучитьОбласть("ШапкаМатериалыИРаботы");
	ТабличныйДокумент.Вывести(ОбластьРецептура);
	ТаблицыМатериалыИРаботы = МакетОбработки.ПолучитьОбласть("ТаблицыМатериалыИРаботы"); 
	Проверка = МакетОбработки.ПолучитьОбласть("Проверка");
	//Запрос  =  Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	РесурсныеСпецификацииасап_пр_Примечания.Примечание.Текст КАК ПримечаниеТекст,
	//|	РесурсныеСпецификацииМатериалыИУслуги.Номенклатура КАК Номенклатура,
	//|	РесурсныеСпецификацииасап_пр_Примечания.НомерСтрокиВнутриКлюча КАК НомерСтрокиВнутриКлюча,
	//|	РесурсныеСпецификацииасап_пр_Примечания.КлючСвязи КАК КлючСвязи
	//|ИЗ
	//|	Справочник.РесурсныеСпецификации.асап_пр_Примечания КАК РесурсныеСпецификацииасап_пр_Примечания
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК РесурсныеСпецификацииМатериалыИУслуги
	//|		ПО РесурсныеСпецификацииасап_пр_Примечания.КлючСвязи = РесурсныеСпецификацииМатериалыИУслуги.КлючСвязи
	//|ГДЕ
	//|	РесурсныеСпецификацииасап_пр_Примечания.Примечание <> НЕОПРЕДЕЛЕНО
	//|	И РесурсныеСпецификацииасап_пр_Примечания.Ссылка = &Ссылка
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	РесурсныеСпецификацииасап_пр_Примечания.НомерСтрокиВнутриКлюча";
	//Запрос.УстановитьПараметр("Ссылка",СсылкаНаДокумент.Спецификация);
	//
	//ТаблицаПримечании = Запрос.Выполнить().Выгрузить(); 
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	РесурсныеСпецификацииМатериалыИУслуги.НомерСтроки КАК НомерСтроки,
	//|	РесурсныеСпецификацииМатериалыИУслуги.КлючСортировки КАК КлючСортировки,
	//|	РесурсныеСпецификацииМатериалыИУслуги.Номенклатура КАК Номенклатура,
	//|	РесурсныеСпецификацииМатериалыИУслуги.КоличествоУпаковок КАК КоличествоУпаковок,
	//|	РесурсныеСпецификацииМатериалыИУслуги.Номенклатура.ЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения,
	//|	РесурсныеСпецификацииМатериалыИУслуги.КлючСвязи КАК КлючСвязи,
	//|	РесурсныеСпецификацииМатериалыИУслуги.Номенклатура.Артикул КАК НоменклатураАртикул,
	//|	ЭтапПроизводства2_2.Ссылка КАК Ссылка
	//|ПОМЕСТИТЬ Вр
	//|ИЗ
	//|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК РесурсныеСпецификацииМатериалыИУслуги
	//|		ПО (ЭтапПроизводства2_2.Спецификация = РесурсныеСпецификацииМатериалыИУслуги.Ссылка)
	//|ГДЕ
	//|	ЭтапПроизводства2_2.Ссылка = &Ссылка
	//|	И РесурсныеСпецификацииМатериалыИУслуги.Ссылка = &Ссылка2
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Вр.НомерСтроки КАК НомерСтроки,
	//|	Вр.КлючСортировки КАК КлючСортировки,
	//|	Вр.Номенклатура КАК Номенклатура,
	//|	Вр.НоменклатураЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения,
	//|	Вр.КлючСвязи КАК КлючСвязи,
	//|	Вр.НоменклатураАртикул КАК НоменклатураАртикул,
	//|	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.КоличествоУпаковок КАК Количество
	//|ИЗ
	//|	Вр КАК Вр
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами
	//|		ПО Вр.Ссылка = ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Ссылка
	//|			И (ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Номенклатура = Вр.Номенклатура)
	//|			И Вр.НомерСтроки = ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.НомерСтроки";
	//
	//
	//Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент.Ссылка); 
	//Запрос.УстановитьПараметр("Ссылка2", СсылкаНаДокумент.Спецификация);    
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//МассивТаблицы =  Новый Массив;
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	ТаблицыМатериалыИРаботы.Параметры.Материал    = ВыборкаДетальныеЗаписи.Номенклатура;
	//	ТаблицыМатериалыИРаботы.Параметры.Артикул    = ВыборкаДетальныеЗаписи.НоменклатураАртикул;
	//	ТаблицыМатериалыИРаботы.Параметры.Количество  = ВыборкаДетальныеЗаписи.Количество;
	//	ТаблицыМатериалыИРаботы.Параметры.ЕдИзм     = ВыборкаДетальныеЗаписи.НоменклатураЕдиницаИзмерения;
	//	ТаблицыМатериалыИРаботы.Параметры.Номер  = ВыборкаДетальныеЗаписи.НомерСтроки;
	//	ТаблицыМатериалыИРаботы.Параметры.Ключ       = ВыборкаДетальныеЗаписи.КлючСортировки;
	//	
	//	ТабличныйДокумент.Вывести(ТаблицыМатериалыИРаботы);
	//	МассивТаблицы.Очистить();
	//	МассивТаблицы =ТаблицаПримечании.НайтиСтроки(Новый Структура("КлючСвязи", ВыборкаДетальныеЗаписи.КлючСвязи));
	//	Если МассивТаблицы.Количество() <>  0  Тогда
	//		Для Каждого Строка Из МассивТабЛицы  Цикл
	//			Проверка.Параметры.ТекстПримечание  = Строка.ПримечаниеТекст;
	//			ТабличныйДокумент.Вывести(Проверка);
	//		КонецЦикла;
	//	КонецЕсли;
	//КонецЦикла;  
	
	Если ТипЗнч(СсылкаНаДокумент.Спецификация) = Тип("СправочникСсылка.РесурсныеСпецификации") Тогда 
		ВидНоменклатуры =  Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Произвольные тексты");
		
		ТЗМатериалыИУслуги =  СсылкаНаДокумент.Спецификация.МатериалыИУслуги.Выгрузить();
		Для Каждого Строка ИЗ ТЗМатериалыИУслуги Цикл 
			Если НЕ Строка.Номенклатура.ВидНоменклатуры = ВидНоменклатуры  Тогда
				ТаблицыМатериалыИРаботы.Параметры.Материал    = Строка.Номенклатура;
				ТаблицыМатериалыИРаботы.Параметры.Артикул    = Строка.Номенклатура.Артикул;
				ТаблицыМатериалыИРаботы.Параметры.Количество  = Строка.КоличествоУпаковок;
				ТаблицыМатериалыИРаботы.Параметры.ЕдИзм     = Строка.Номенклатура.ЕдиницаИзмерения;
				ТаблицыМатериалыИРаботы.Параметры.Номер  = Строка.НомерСтроки;
				ТаблицыМатериалыИРаботы.Параметры.Ключ       = Строка.КлючСортировки;
				ТабличныйДокумент.Вывести(ТаблицыМатериалыИРаботы);
			Иначе 
				Проверка.Параметры.ТекстПримечание  = Строка.Номенклатура.Описание;
				ТабличныйДокумент.Вывести(Проверка);
			КонецЕсли;
		КонецЦикла;
		
		
	КонецЕсли;
	
	
	
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции

Функция ПолучитьШтрихкод(ШиринаШтрихкода, ВысотаШтрихкода, ЗначШтрихкод, ЗначТипШтрихкода)
	
	ПараметрыШтрихкода = ГенерацияШтрихкода.ПараметрыГенерацииШтрихкода();
	ПараметрыШтрихкода.Ширина = ШиринаШтрихкода;
	ПараметрыШтрихкода.Высота = ВысотаШтрихкода;
	ПараметрыШтрихкода.ТипКода = ЗначТипШтрихкода;
	ПараметрыШтрихкода.Штрихкод = ЗначШтрихкод;
	ПараметрыШтрихкода.ПрозрачныйФон = Истина;
	ПараметрыШтрихкода.УровеньКоррекцииQR = 2;
	ПараметрыШтрихкода.ОтображатьТекст = Ложь;
	ПараметрыШтрихкода.Масштабировать = Истина;
	ПараметрыШтрихкода.СохранятьПропорции = Истина;
	ПараметрыШтрихкода.ВертикальноеВыравнивание  = 0; 
	ПараметрыШтрихкода.GS1DatabarКоличествоСтрок = 1;
	ПараметрыШтрихкода.ТипВходныхДанных = 0;
	
	РезультатШтрихкод = ГенерацияШтрихкода.ИзображениеШтрихкода(ПараметрыШтрихкода);
	
	Возврат РезультатШтрихкод.Картинка;
	
КонецФункции 


Функция НайтиВоду()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Артикул = &Артикул";
	
	Запрос.УстановитьПараметр("Артикул", "009800");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
	КонецЦикла;
	
	
	Возврат Выборка.Ссылка;
	
КонецФункции

Функция ПолучитьНомерДляШтрихКода(Распоряжение)   
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", Распоряжение);
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СвязанныеДокументы.Ссылка КАК Ссылка
	|ИЗ
	|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка УБЫВ";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл 
		ЭтапПроизводства = Выборка.Ссылка;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", ЭтапПроизводства);
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СвязанныеДокументы.Ссылка КАК Ссылка
	|ИЗ
	|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка УБЫВ";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ПроизводственнаяОперация =  Выборка.Ссылка;
	КонецЦикла; 
	
	Если ПроизводственнаяОперация.ВыходныеИзделия.Количество() > 0  И  ПроизводственнаяОперация.Операция.НомерСледующейОперации  = 0  Тогда 
		Возврат ПроизводственнаяОперация; 
	Иначе
		Возврат Неопределено;
	КонецЕсли; 
	
	
	
	
	
	
	
КонецФункции

