
&НаКлиенте
Процедура ВыбратьДокумент(Команда) 
	Объект.Таблица.Очистить();
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Если Диалог.Выбрать() Тогда
		
		Объект.ПутьФайла = Диалог.ПолноеИмяФайла;
		
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Процедура УстановитьОтборНаСервере()
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбор(Команда)
	УстановитьОтборНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Прочитать(Команда)
	
	ПрочитатьФайлНаСервере(Объект.ПутьФайла);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьФайлНаСервере(ПолноеИмяФайла)
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.WorkBooks.Open(ПолноеИмяФайла);
	Исключение
		Сообщить("Ошибка при открытии файла с помощью Excel! Загрузка не будет произведена!");
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки; 
	
	Попытка
		Excel.Sheets(1).Select(); 
	Исключение
		Excel.ActiveWorkbook.Close();
		Excel = 0;
		Сообщить("Файл "+Строка(Объект.ПутьФайла)+" не соответствует необходимому формату! Первый лист не найден!");
		ОтменитьТранзакцию();
		Возврат;
	КонецПопытки; 
	
	ФайлСтрок = Excel.Cells(1,1).SpecialCells(11).Row;
	ФайлКолонок = Excel.Cells(1,1).SpecialCells(11).Column;
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("ДатаСобытия");
	ТаблицаЗначений.Колонки.Добавить("НомерДокумента");
	ТаблицаЗначений.Колонки.Добавить("СерийныйНомер");
	ТаблицаЗначений.Колонки.Добавить("НоменклатураОборотнаяТараАртикул");
	ТаблицаЗначений.Колонки.Добавить("Характеристика");
	ТаблицаЗначений.Колонки.Добавить("Склад");
	ТаблицаЗначений.Колонки.Добавить("Статус");
	ТаблицаЗначений.Колонки.Добавить("Блокирован");
	
	Для НС = 2 по ФайлСтрок Цикл 
		
		НоваяСтрока = ТаблицаЗначений.Добавить();
		
		Для НомерКолонки = 1 по ТаблицаЗначений.Колонки.Количество() Цикл
			ТекущееЗначение = Excel.Cells(НС, НомерКолонки).Text;
			ИмяКолонки = ТаблицаЗначений.Колонки[НомерКолонки].Имя;
			НоваяСтрока[ИмяКолонки] = ТекущееЗначение;
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого Строка Из ТаблицаЗначений Цикл
		НоваяСтрока = Объект.Таблица.Добавить();
		Попытка
			НоваяСтрока.ДатаСобытия = Дата(Строка.ДатаСобытия);
			НоваяСтрока.НомерДокумента = Строка.НомерДокумента;
			НоваяСтрока.СерийныйНомер = Справочники.СерииНоменклатуры.НайтиПоНаименованию(Строка.СерийныйНомер);
			НоваяСтрока.Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", Строка.НоменклатураОборотнаяТараАртикул);
			НоваяСтрока.Характеристика = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура, "Характеристика");
			НоваяСтрока.Склад = Справочники.Склады.НайтиПоНаименованию(Строка.Склад);
			НоваяСтрока.Статус = Перечисления.асапСтатусКонтейнеров[СтрЗаменить(Строка.Статус, " ", "")];
			НоваяСтрока.Блокирован = ?(Строка.Блокирован = "Да", Истина, Ложь);
		Исключение
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке %1 некорректно заполнились данные.", НоваяСтрока.ПолучитьИдентификатор()),,,,); 
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьНаСервере()
	
	НомерС = 1;
	
	Для Каждого Строка Из Объект.Таблица Цикл
		
		МассивСтрок = Объект.Таблица.НайтиСтроки(Новый Структура("НомерДокумента, ДатаСобытия", Строка.НомерДокумента, Строка.ДатаСобытия));
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	afmrДвиженияОборотнойТары.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.afmrДвиженияОборотнойТары КАК afmrДвиженияОборотнойТары
		|ГДЕ
		|	afmrДвиженияОборотнойТары.Номер = &Номер
		|	И afmrДвиженияОборотнойТары.Дата = &Дата
		|	И afmrДвиженияОборотнойТары.Комментарий = &Комментарий";
		Запрос.УстановитьПараметр("Номер", Строка.НомерДокумента);
		Запрос.УстановитьПараметр("Дата", Строка.ДатаСобытия);
		Запрос.УстановитьПараметр("Комментарий", "Остатки оборотной тары");
		
		Результат = Запрос.Выполнить().Выгрузить();
		
		Если Результат.Количество() > 0 Тогда
			НовыйДокумент = Результат[0].Ссылка.ПолучитьОбъект();
		Иначе
			НовыйДокумент = Документы.afmrДвиженияОборотнойТары.СоздатьДокумент();	
		КонецЕсли;
		
		Попытка
			
			НовыйДокумент.Организация = Объект.Организация;
			НовыйДокумент.Дата = ?(ЗначениеЗаполнено(Строка.ДатаСобытия), Строка.ДатаСобытия, ТекущаяДатаСеанса());
			НовыйДокумент.Номер = Строка.НомерДокумента;
			НовыйДокумент.Комментарий = "Остатки оборотной тары";
			НовыйДокумент.ВидДокумента = Перечисления.асапВидыДвиженияОборотнойТары.ВнутреняяНакладная;
			НовыйДокумент.ОборотнаяТара.Очистить();
			Для Каждого Элемент Из МассивСтрок Цикл
				НСтр = НовыйДокумент.ОборотнаяТара.Добавить();
				//НСтр.НомерСтроки = 1;
				НСтр.Блокировать =  Элемент.Блокирован;
				НСтр.СкладПолучатель = Элемент.Склад;
				Если ТипЗнч(Элемент.СерийныйНомер) <> Тип("СправочникСсылка.СерииНоменклатуры") Тогда 
					Запрос = Новый Запрос;
					Запрос.УстановитьПараметр("Наименование", Элемент.СерийныйНомер);
					Запрос.УстановитьПараметр("ВидНоменклатуры",Объект.ВидНоменклатуры);
					
					Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
					|	СерииНоменклатуры.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
					|ГДЕ
					|	СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры
					|	И СерииНоменклатуры.Наименование = &Наименование";
					
					Результат = Запрос.Выполнить();
					
					Выборка = Результат.Выбрать();
					Пока Выборка.Следующий() Цикл
						
					КонецЦикла;  
					
					Если Выборка.Ссылка  = Неопределено Тогда
						НСтр.Серия = СоздатьСериюНоменклатуры(Элемент.СерийныйНомер, Элемент.Номенклатура);
					Иначе
						НСтр.Серия = Выборка.Ссылка;
					КонецЕсли;
				Иначе
					НСтр.Серия = Элемент.СерийныйНомер;
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Элемент.Характеристика) Тогда
					НСтр.Характеристика = ХарактеристикаПоНоменклатуре(Элемент.Номенклатура);	
				КонецЕсли;
				Нстр.Количество = 1;
				Нстр.Контрагент = ?(ТипЗнч(Элемент.Склад) = Тип("СправочникСсылка.Контрагенты"), Элемент.Склад, Справочники.Контрагенты.ПустаяСсылка());
				Нстр.СтатусВходящий = Элемент.Статус;
				ЗаполнитьЗначенияСвойств(НСтр, Элемент);
			КонецЦикла;
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			
		Исключение
			
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке %1 не удалось обработать документ.", НомерС),,,,); 
			
		КонецПопытки;
		НомерС = НомерС + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуТаблицы(Команда)
	ВыполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьКлиент(Команда)

	Объект.Таблица.Очистить();
	
	Попытка
		Эксель = Новый COMОбъект("Excel.Application");
		Эксель.DisplayAlerts = 0;
		Эксель.Visible = 0;
	Исключение
		Сообщить(ОписаниеОшибки()); 
		Возврат;
	КонецПопытки;
	
	ЭксельКнига = Эксель.Workbooks.Open(Объект.ПутьФайла);	
	КоличествоСтраниц = ЭксельКнига.Sheets.Count;
	
	// Перебираем все листы
	Для НомерЛиста = 1 По КоличествоСтраниц Цикл 
		Лист = ЭксельКнига.Sheets(НомерЛиста);
		КоличествоСтрок = Лист.Cells(1, 1).SpecialCells(11).Row;
		КоличествоКолонок = Лист.Cells(1, 1).SpecialCells(11).Column;
		
		// Перебираем строки
		Для НомерСтроки = 2 По КоличествоСтрок Цикл 
			Нстр = Объект.Таблица.Добавить();
			Попытка
				Нстр.ДатаСобытия	= Дата(Лист.Cells(НомерСтроки, 1).Value);
			Исключение
			КонецПопытки;
			Нстр.НомерДокумента	= Формат(Лист.Cells(НомерСтроки, 2).Value, "ЧГ=");
			Нстр.Номенклатура	= ПолучитьСсылкуПоНаименованию(Формат(Лист.Cells(НомерСтроки, 4).Value, "ЧГ="), "Номенклатура");
			Нстр.СерийныйНомер	= ПолучитьСсылкуПоНаименованию(Формат(Лист.Cells(НомерСтроки, 3).Value, "ЧГ="), "СерийныйНомер", Нстр.Номенклатура);
			Нстр.Характеристика = ХарактеристикаПоНоменклатуре(Нстр.Номенклатура);
			Нстр.Склад  = ПолучитьСсылкуПоНаименованию(Лист.Cells(НомерСтроки, 6).Value, "Склад", Формат(Лист.Cells(НомерСтроки, 8).Value, "ЧГ="));
			Нстр.Статус = ПолучитьСсылкуПоНаименованию(Нстр.Склад, "Статус");
			Нстр.SAPномерКонтрагента = Формат(Лист.Cells(НомерСтроки, 8).Value, "ЧГ=");
			//Нстр.Блокирован = ?(Формат(Лист.Cells(НомерСтроки, 9).Value, "ЧГ=") = "НЕТ", Ложь, Истина);
			Если Формат(Лист.Cells(НомерСтроки, 9).Value, "ЧГ=") = "Да" ИЛИ Формат(Лист.Cells(НомерСтроки, 9).Value, "ЧГ=") = "ДА" Тогда
				Нстр.Блокирован  = Истина;	
			Иначе
				Нстр.Блокирован  = Ложь;	
			КонецЕсли;;
		КонецЦикла;	
	КонецЦикла;
	
	Эксель.Workbooks.Close();
	Эксель.Application.Quit();
	
КонецПроцедуры  

Функция ПолучитьСсылкуПоНаименованию(Поле, Тип, Доп = Неопределено)
	Если Тип = "Номенклатура" Тогда
		Возврат Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", Поле);
	ИначеЕсли Тип = "СерийныйНомер" Тогда
		СерийныйНомер = ПолучитьСериюПоНаименованию(Поле);
		Если СерийныйНомер = Справочники.СерииНоменклатуры.ПустаяСсылка() Тогда
			Возврат Поле;
		Иначе
			Возврат СерийныйНомер;
		КонецЕсли;
	ИначеЕсли Тип = "Склад" Тогда
		Если Доп = "" Тогда
			Склад = Справочники.Склады.НайтиПоНаименованию(Поле);
			Если ЗначениеЗаполнено(Склад) Тогда
				Возврат Склад;
			Иначе
				Контрагент = Справочники.Контрагенты.НайтиПоНаименованию(Поле);
				Возврат Контрагент;
			КонецЕсли;
		Иначе
			Возврат ПолучитьПартнераПоДопРеквизиту(Доп);	
		КонецЕсли;
	ИначеЕсли Тип = "Статус" Тогда 
		
		СтатусРек = ПолучитьПредопределенноеЗначение(Поле);
		Если НЕ СтатусРек  = Неопределено Тогда
			  Возврат СтатусРек;
		Иначе
			  Возврат Перечисления.асапСтатусКонтейнеров.ВОчистке;
		КонецЕсли;
		
	КонецЕсли;
КонецФункции

Функция ПолучитьРеквизитПоСсылке(Ссылка, Реквизит)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, Реквизит);
КонецФункции

Функция СоздатьСериюНоменклатуры(Поле, Номенклатура)
	Попытка
		НовыйЭлемент = Справочники.СерииНоменклатуры.СоздатьЭлемент();
		НовыйЭлемент.Номер = Поле;
		НовыйЭлемент.Наименование = Поле;
		НовыйЭлемент.ВидНоменклатуры = Объект.ВидНоменклатуры;
		НовыйЭлемент.Записать();
		Возврат НовыйЭлемент.Ссылка;
	Исключение
		Возврат Справочники.СерииНоменклатуры.ПустаяСсылка();
	КонецПопытки;
КонецФункции

Функция ХарактеристикаПоНоменклатуре(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец
	|	И ХарактеристикиНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры";
	Запрос.УстановитьПараметр("Владелец", Номенклатура);
	Запрос.УстановитьПараметр("ВидНоменклатуры", Объект.ВидНоменклатуры);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция ПолучитьСериюПоНаименованию(Наименование)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры
	|	И СерииНоменклатуры.Номер = &Номер";
	Запрос.УстановитьПараметр("ВидНоменклатуры", Объект.ВидНоменклатуры);
	Запрос.УстановитьПараметр("Номер", Наименование);
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда
		Возврат Рез.Ссылка;
	Иначе
		Возврат Справочники.СерииНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПартнераПоДопРеквизиту(Доп)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПартнерыДополнительныеРеквизиты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Партнеры.ДополнительныеРеквизиты КАК ПартнерыДополнительныеРеквизиты
	|ГДЕ
	|	ПартнерыДополнительныеРеквизиты.Свойство = &Свойство
	|	И ПартнерыДополнительныеРеквизиты.Значение = &Значение";
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("SAP-номер Контрагента"));
	Запрос.УстановитьПараметр("Значение", Доп);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", Результат.Ссылка);
	Иначе
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьПредопределенноеЗначение(Значение)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Значение", Значение );	
	Запрос.Текст = "ВЫБРАТЬ
	|	afmrПредопределенныеЗначенияРеквизиты.Реквизит КАК Реквизит
	|ИЗ
	|	Справочник.afmrПредопределенныеЗначения.Реквизиты КАК afmrПредопределенныеЗначенияРеквизиты
	|ГДЕ
	|	afmrПредопределенныеЗначенияРеквизиты.Ссылка.Наименование = ""Настройки оборотной тары""
	|	И afmrПредопределенныеЗначенияРеквизиты.Значение = &Значение";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
	КонецЦикла;
	   Возврат Выборка.Реквизит;
КонецФункции




